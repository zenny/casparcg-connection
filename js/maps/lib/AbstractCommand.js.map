{"version":3,"sources":["lib/AbstractCommand.ts"],"names":[],"mappings":"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","file":"lib/AbstractCommand.js","sourcesContent":["// AMCPUtilNS\nimport {AMCPUtil as AMCPUtilNS} from \"./AMCP\";\nimport CasparCGSocketResponse = AMCPUtilNS.CasparCGSocketResponse;\n// ResponseNS\nimport {Response as ResponseNS} from \"./ResponseSignature\";\nimport ResponseSignature = ResponseNS.ResponseSignature;\nimport {Response as ResponseValidatorNS} from \"./ResponseValidators\";\nimport IResponseValidator = ResponseValidatorNS.IResponseValidator;\nimport {Response as ResponseParserNS} from \"./ResponseParsers\";\nimport IResponseParser = ResponseParserNS.IResponseParser;\n// Param NS\nimport {Param as ParamNS} from \"./ParamSignature\";\nimport optional = ParamNS.Optional;\nimport required = ParamNS.Required;\nimport Payload = ParamNS.Payload;\nimport PayloadVO = ParamNS.PayloadVO;\nimport Param = ParamNS.Param;\nimport ParamData = ParamNS.ParamData;\nimport IParamSignature = ParamNS.IParamSignature;\n// Validation ND\nimport {Validation as ValidationNS} from \"./ParamValidators\";\nimport PositiveNumberValidatorBetween = ValidationNS.PositiveNumberRoundValidatorBetween;\nimport KeywordValidator = ValidationNS.KeywordValidator;\n// Protocol NS\nimport {Protocol as ProtocolNS} from \"./ProtocolLogic\";\nimport IProtocolLogic = ProtocolNS.IProtocolLogic;\n// Callback NS\nimport {Callback as CallbackNS} from \"./global/Callback\";\nimport ICommandStatusCallback = CallbackNS.ICommandStatusCallback;\n\n/**\n * \n */\nexport namespace Command {\n\n\t/**\n\t * \n\t */\n\texport interface IAMCPResponse {\n\t\tcode: number;\n\t\traw: string;\n\t\ttoString(): string;\n\t\tdata: Object;\n\n\t\t// 1xx\n\t\t// 2xx\n\t\t// 3xx\n\t\t// 4xx\n\t\t// 5xx\n\t\t// payload \n\t\t\t// -> raw string\n\t\t\t// -> object with string payload\n\t\t\t// -> object with array of string payloads\n\t}\n\n\t/**\n\t * \n\t */\n\texport class AMCPResponse implements IAMCPResponse {\n\t\tpublic code: number;\n\t\tpublic raw: string;\n\t\tpublic data: Object;\n\n\t\tpublic toString(): string {\n\t\t\tif (typeof this.raw === \"string\") {\n\t\t\t\treturn this.raw.replace(/\\r?\\n|\\r/gi, \"\");\n\t\t\t}\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\t/**\n\t * \n\t */\n\texport enum IAMCPStatus {\n\t\tInvalid\t\t= -1,\n\t\tNew\t\t\t= 0,\n\t\tInitialized\t= 1,\n\t\tQueued \t\t= 2,\n\t\tSent\t\t= 3,\n\t\tSuceeded\t= 4,\n\t\tFailed\t\t= 5,\n\t\tTimeout\t\t= 6\n\t}\n\n\t/**\n\t * \n\t */\n\texport interface IAMCPCommandData {\n\t\taddress: string;\n\t\tchannel: number;\n\t\tlayer: number;\n\t\tpayload: PayloadVO;\n\t\tresponse: IAMCPResponse;\n\t\tstatus: IAMCPStatus;\n\t\tid: string;\n\t}\n\n\t/**\n\t * \n\t */\n\texport interface IAMCPCommandVO extends IAMCPCommandData {\n\t\t_commandName: string;\n\t\t_objectParams: Param;\n\t\t_stringParamsArray: Array<string>;\n\t}\n\n\t/**\n\t * \n\t */\n\texport interface IAMCPCommand extends IAMCPCommandData {\n\t\tvalidateParams(): boolean;\n\t\tvalidateResponse(response: CasparCGSocketResponse): boolean;\n\t\tserialize(): IAMCPCommandVO;\n\t\tpopulate(cmdVo: IAMCPCommandVO, id: string): void;\n\t\tparamProtocol: Array<IParamSignature>;\n\t\tprotocolLogic: Array<IProtocolLogic>;\n\t\tresponseProtocol: ResponseSignature;\n\t\tresolve?: any;\n\t\treject?: any;\n\t\tonStatusChanged: ICommandStatusCallback;\n\t}\n\n\t/**\n\t * \n\t */\n\texport function isIAMCPCommand(object: Object): object is IAMCPCommand {\n\t\t// @todo: better inheritance type checking\n\t\tfor (let prop in AbstractCommand.prototype) {\n\t\t\tif (object[prop] === undefined) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * \n\t */\n\texport abstract class AbstractCommand implements IAMCPCommand {\n\t\tresponse: IAMCPResponse = new AMCPResponse();\n\t\tparamProtocol: Array<IParamSignature>;\n\t\tresponseProtocol: ResponseSignature = new ResponseSignature();\n\t\tonStatusChanged: ICommandStatusCallback;\n\t\tprivate _status: IAMCPStatus = IAMCPStatus.New;\n\t\tprotected _channel: number;\n\t\tprotected _layer: number;\n\t\tprotected _id: string;\n\t\tprotected _payload: PayloadVO = {};\n\t\tprotected _stringParamsArray: Array<string>;\n\t\tprotected _objectParams: Param;\n\n\t\t// @todo: add concept of \"variants\", adding an ENUM to variants of the same (query) verb-command. INFO x INFO y, but not Thumbnail Retriece and thumbnail generate, different verbs\n\t\t\t// not LOG (action, not query)\n\t\t\t// INFO, HELP\n\n\t\t// @todo:\n\t\t\t// channel vs layer-specific vs layer-fallback addresses\n\t\t\t// NB.: INFO BOTH LAYER AND CHANNEL!!!!!!!!\n\t\t\t\t// INFO, SWAP, REMOVE, MIXER CLEAR, CLEAR, \n\n\n\t\t// param getter/setters\n\t\t\t// param list (dynamic)\n\t\t// media info/template file-type to generate param data for fields\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tconstructor(params?: (string|Param|(string|Param)[])) {\n\t\t\t// parse params to objects\n\t\t\tlet paramsArray: Array<string|Param> = [];\n\n\t\t\t// conform params to array\n\t\t\tif (params instanceof Array) {\n\t\t\t\tparamsArray = params as Array<string|Param>;\n\t\t\t}else {\n\t\t\t\tparamsArray = [<string|Param>params];\n\t\t\t}\n\t\t\tthis._stringParamsArray = [];\n\t\t\tthis._objectParams = {};\n\n\t\t\tfor (let element of paramsArray){\n\t\t\t\tif (element === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (typeof element === \"string\") {\n\t\t\t\t\telement = element.toString().trim();\n\t\t\t\t\tthis._stringParamsArray = this._stringParamsArray.concat([...element.toString().split(/\\s+/)]); // @todo: string delimiter pairing (,;) -> objectArray\n\t\t\t\t}else if (typeof element === \"object\") {\n\t\t\t\t\tfor (let prop in element) {\n\t\t\t\t\t\tthis._objectParams[prop] = element[prop];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tpublic validateParams(): boolean {\n\t\t\tlet required: Array<IParamSignature> = this.paramProtocol ? this.paramProtocol.filter(signature => signature.required.valueOf() === true) : [];\n\t\t\tlet optional: Array<IParamSignature> = this.paramProtocol ? this.paramProtocol.filter(signature => signature.required.valueOf() === false) : [];\n\n\t\t\t// check all required\n\t\t\tfor (let signature of required){\n\t\t\t\tif (!this.validateParam(signature)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add valid optionals\n\t\t\tfor (let signature of optional){\n\t\t\t\tthis.validateParam(signature);\n\t\t\t}\n\n\t\t\tif (!this.validateProtocolLogic()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tlet validParams: Array<IParamSignature> = this.paramProtocol ? this.paramProtocol.filter((param) => param.resolved && param.payload !== null) : [];\n\t\t\tlet invalidParams: Array<IParamSignature> = this.paramProtocol ? this.paramProtocol.filter((param) => param.resolved && param.payload === null && param.required.valueOf() === true) : [];\n\n\t\t\tif (invalidParams.length > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor (let param of validParams){\n\t\t\t\tlet payload: Payload = {key: \"\", value: null};\n\t\t\t\tpayload.key = param.key || \"\";\n\t\t\t\tpayload.value = param.payload;\n\t\t\t\tthis.payload[param.name] = payload;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tprotected validateParam(signature: IParamSignature): boolean {\n\t\t\tlet result: ParamData;\n\t\t\tlet key: string;\n\t\t\tlet param: Object;\n\n\t\t\t// objectParams parsing\n\t\t\tif (this._objectParams.hasOwnProperty(signature.name)) {\n\t\t\t\tparam = this._objectParams[signature.name];\n\t\t\t}else {\n\t\t\t\t// stringParam parsing\t\n\t\t\t\tif (this._stringParamsArray.length > 0) {\n\t\t\t\t\tparam = this._stringParamsArray;\n\t\t\t\t}else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// filter out undefined object params\n\t\t\tif (param === undefined) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ((result = signature.validation.resolve(param, (signature.key ||  signature.name))) !== false) {\n\t\t\t\tsignature.validation.resolved = true;\n\t\t\t\tsignature.payload = result;\n\t\t\t\treturn true;\n\t\t\t}else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tprotected validateProtocolLogic(): boolean {\n\n\t\t\tif (!this.protocolLogic) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tlet result: Array<IParamSignature>;\n\t\t\tfor (let rule of this.protocolLogic){\n\t\t\t\tif ((result = rule.resolve(this.paramProtocol)) !== null) {\n\t\t\t\t\tthis.paramProtocol = result;\n\t\t\t\t}else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tpublic validateResponse(response: CasparCGSocketResponse): boolean {\n\t\t\t// code is correct\n\t\t\tif (response.statusCode !== this.responseProtocol.code) {\n\t\t\t\t// @todo: fallbacks? multiple valid codes?\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// data is valid\n\t\t\tlet validData: Object;\n\t\t\tif (this.responseProtocol.validator) { // @todo: typechecking (\"class that implements....\")\n\t\t\t\tlet validator: IResponseValidator = Object.create(this.responseProtocol.validator[\"prototype\"]);\n\t\t\t\tif ((validData = validator.resolve(response)) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// data gets parsed\n\t\t\tif (this.responseProtocol.parser && validData) { // @todo: typechecking (\"class that implements....\")\n\t\t\t\tlet parser: IResponseParser = Object.create(this.responseProtocol.parser[\"prototype\"]);\n\t\t\t\tif ((validData = parser.parse(validData)) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.response.raw = response.responseString;\n\t\t\tthis.response.code = response.statusCode;\n\t\t\tthis.response.data = validData;\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget payload(): PayloadVO{\n\t\t\treturn this._payload;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget id(): string{\n\t\t\treturn this._id || (new Date().getTime() + Math.random() * 100).toString();\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tprotected validateChannel(override?: number): number {\n\t\t\tlet result: ParamData;\n\t\t\tlet validator = new PositiveNumberValidatorBetween(1, 9999);\n\t\t\tlet param: Object;\n\n\t\t\tif (this._objectParams.hasOwnProperty(\"channel\")) {\n\t\t\t\tparam = this._objectParams[\"channel\"];\n\t\t\t}else {\n\t\t\t\t// @todo: dispatch error\n\t\t\t\treturn override;\n\t\t\t}\n\n\t\t\tif ((result = validator.resolve(param)) !== false) {\n\t\t\t\treturn Number(result);\n\t\t\t}else {\n\t\t\t\t// @todo: dispatch error\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tprotected validateLayer(override?: number): number {\n\t\t\tlet result: ParamData;\n\t\t\tlet validator = new PositiveNumberValidatorBetween(0, 9999);\n\t\t\tlet param: Object;\n\n\t\t\tif (this._objectParams.hasOwnProperty(\"layer\")) {\n\t\t\t\tparam = this._objectParams[\"layer\"];\n\t\t\t}else {\n\t\t\t\t// @todo: dispatch error\n\t\t\t\treturn override;\n\t\t\t}\n\t\t\tif ((result = validator.resolve(param)) !== false) {\n\t\t\t\treturn Number(result);\n\t\t\t}else {\n\t\t\t\t// @todo: dispatch error\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget protocolLogic(): Array<IProtocolLogic>{\n\t\t\treturn this.constructor[\"protocolLogic\"] ||  [];\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget channel(): number{\n\t\t\treturn -1;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget layer(): number{\n\t\t\treturn -1;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget address(): string{\n\t\t\treturn \"\";\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget status(): IAMCPStatus{\n\t\t\treturn this._status;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tset status(code: IAMCPStatus) {\n\t\t\tif (code !== this._status) {\n\t\t\t\tthis._status = code;\n\t\t\t\tif (this.onStatusChanged) {\n\t\t\t\t\tthis.onStatusChanged(this._status);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tpublic serialize(): IAMCPCommandVO {\n\t\t\treturn{\n\t\t\t\tchannel: this.channel,\n\t\t\t\tlayer: this.layer,\n\t\t\t\tpayload: this.payload,\n\t\t\t\tresponse: this.response,\n\t\t\t\tstatus: this.status,\n\t\t\t\t_commandName: this.constructor[\"name\"],\n\t\t\t\t_objectParams: this._objectParams,\n\t\t\t\t_stringParamsArray: this._stringParamsArray\n\t\t\t} as IAMCPCommandVO;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tpopulate(cmdVo: IAMCPCommandVO, id): void {\n\t\t\tthis._stringParamsArray = cmdVo._stringParamsArray;\n\t\t\tthis._objectParams = cmdVo._objectParams;\n\t\t\tthis.response = cmdVo.response;\n\t\t\tthis._id = id;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tpublic toString(): string {\n\t\t\tlet message: string = \"\";\n\n\t\t\tswitch (this.status) {\n\t\t\t\tcase IAMCPStatus.Invalid:\n\t\t\t\t\tmessage = \"Invalid command\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase IAMCPStatus.New:\n\t\t\t\t\tmessage = \"New command\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase IAMCPStatus.Queued:\n\t\t\t\t\tmessage = \"Queued command\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase IAMCPStatus.Sent:\n\t\t\t\t\tmessage = \"Sent command\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase IAMCPStatus.Suceeded:\n\t\t\t\t\tmessage = \"Succeeded command\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase IAMCPStatus.Failed:\n\t\t\t\t\tmessage = \"Failed command\";\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn message;\n\t\t}\n\t}\n\n\t/**\n\t * \n\t */\n\texport abstract class AbstractOrChannelOrLayerCommand extends AbstractCommand {\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tconstructor(params?: (string|Param|(string|Param)[])) {\n\t\t\tsuper(params);\n\t\t\tlet channel: number = this.validateChannel();\n\t\t\tlet layer: number = this.validateLayer();\n\t\t\tif (channel) {\n\t\t\t\tthis._channel = channel;\n\t\t\t\tif (layer) {\n\t\t\t\t\tthis._layer = layer;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget channel(): number{\n\treturn this._channel ||  -1;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget layer(): number{\n\treturn this._layer ||  -1;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget address(): string{\n\tlet address: string = \"\";\n\n\tif (this.channel && (this.channel > -1)) {\n\taddress = this.channel.toString();\n\t}else {\n\treturn address;\n\t}\n\tif (this.layer && (this.layer > -1)) {\n\taddress = `${address}-${this.layer}`;\n\t}\n\n\treturn address;\n\t\t}\n\t}\n\n\t/**\n\t * \n\t */\n\texport abstract class AbstractChannelCommand extends AbstractCommand {\n\t\t/**\n\t\t * \n\t\t */\n\t\tconstructor(params?: (string|Param|(string|Param)[])) {\n\t\t\tsuper(params);\n\t\t\tlet channel: number = this.validateChannel();\n\t\t\tif (channel) {\n\t\t\t\tthis._channel = channel;\n\t\t\t\tthis._layer = -1;\n\t\t\t}else {\n\t\t\t\tthrow new Error(\"Needs channel\"); // @todo: dispatch\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget channel(): number{\n\treturn this._channel ||  -1;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget layer(): number{\n\treturn -1;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget address(): string{\n\tif (this.channel) {\n\treturn this.channel.toString();\n\t}else {\n\treturn null;\n\t\t\t\t// @todo throw???\n\t}\n\t\t}\n\t}\n\n\t/**\n\t * \n\t */\n\texport abstract class AbstractLayerCommand extends AbstractCommand {\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tconstructor(params?: (string|Param|(string|Param)[])) {\n\t\t\tsuper(params);\n\t\t\tlet channel: number = this.validateChannel();\n\t\t\tlet layer: number = this.validateLayer();\n\t\t\tif (channel && layer) {\n\t\t\t\tthis._channel = channel;\n\t\t\t\tthis._layer = layer;\n\t\t\t}else {\n\t\t\t\tthrow new Error(\"Needs both channel and layer\"); // @todo: dispatch\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget channel(): number{\n\treturn this._channel ||  -1;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget layer(): number{\n\treturn this._layer ||  -1;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget address(): string{\n\tlet address: string;\n\n\tif (this.channel && (this.channel > -1)) {\n\taddress = this.channel.toString();\n\t}else {\n\treturn null;\n\t\t\t\t// @todo throw???\n\t}\n\tif (this.layer && (this.layer > -1)) {\n\taddress = `${address}-${this.layer}`;\n\t}else {\n\treturn null;\n\t\t\t\t// @todo throw???\n\t}\n\n\treturn address;\n\t\t}\n\t}\n\n\t/**\n\t * \n\t */\n\texport abstract class AbstractChannelOrLayerCommand extends AbstractCommand {\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tconstructor(params?: (string|Param|(string|Param)[])) {\n\t\t\tsuper(params);\n\t\t\tlet channel: number = this.validateChannel();\n\t\t\tlet layer: number = this.validateLayer();\n\n\t\t\tif (channel) {\n\t\t\t\tthis._channel = channel;\n\t\t\t\tif (layer) {\n\t\t\t\t\tthis._layer = layer;\n\t\t\t\t}\n\n\n\t\t\t}else {\n\t\t\t\tthrow new Error(\"Needs at least channel\"); // @todo: dispatch\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget channel(): number{\n\t\t\treturn this._channel ||  -1;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget layer(): number{\n\t\t\treturn this._layer ||  -1;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget address(): string{\n\t\t\tlet address: string;\n\n\t\t\tif (this.channel) {\n\t\t\t\taddress = this.channel.toString();\n\t\t\t}else {\n\t\t\t\treturn null;\n\t\t\t\t\t\t// @todo throw???\n\t\t\t}\n\t\t\tif (this.layer && (this.layer > -1)) {\n\t\t\t\taddress = `${address}-${this.layer}`;\n\t\t\t}\n\n\t\t\treturn address;\n\t\t}\n\t}\n\n\t/**\n\t * \n\t */\n\texport abstract class AbstractLayerWithFallbackCommand extends AbstractCommand {\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tconstructor(params?: (string|Param|(string|Param)[])) {\n\t\t\tsuper(params);\n\t\t\tlet channel: number = this.validateChannel();\n\t\t\tlet layer: number = this.validateLayer(0);\n\t\t\tif (channel) {\n\t\t\t\tthis._channel = channel;\n\t\t\t\tthis._layer = layer;\n\t\t\t}else {\n\t\t\t\tthrow new Error(\"Needs at least channel, layer will default to 0 if not specified\"); // @todo: dispatch\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget channel(): number{\n\treturn this._channel ||  -1;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget layer(): number{\n\treturn this._layer ||  -1;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget address(): string{\n\t\t\tlet address: string;\n\n\t\t\tif (this.channel) {\n\t\t\t\taddress = this.channel.toString();\n\t\t\t}else {\n\t\t\t\treturn null;\n\t\t\t\t\t\t// @todo throw???\n\t\t\t}\n\t\t\tif (this.layer && (this.layer > -1)) {\n\t\t\t\taddress = `${address}-${this.layer}`;\n\t\t\t}\n\n\t\t\treturn address;\n\t\t}\n\t}\n\n\t/**\n\t * \n\t */\n\texport abstract class AbstractLayerWithCgFallbackCommand extends AbstractCommand {\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tconstructor(params?: (string|Param|(string|Param)[])) {\n\t\t\tsuper(params);\n\t\t\tlet channel: number = this.validateChannel();\n\t\t\tlet layer: number = this.validateLayer(9999);\n\t\t\tif (channel) {\n\t\t\t\tthis._channel = channel;\n\t\t\t\tthis._layer = layer;\n\t\t\t}else {\n\t\t\t\tthrow new Error(\"Needs at least channel, layer will default to 9999 if not specified\"); // @todo: dispatch\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget channel(): number{\n\treturn this._channel ||  -1;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget layer(): number{\n\treturn this._layer ||  -1;\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tget address(): string{\n\tlet address: string;\n\n\tif (this.channel) {\n\taddress = this.channel.toString();\n\t}else {\n\treturn null;\n\t\t\t\t// @todo throw???\n\t}\n\tif (this.layer && (this.layer > -1)) {\n\taddress = `${address}-${this.layer}`;\n\t}\n\n\treturn address;\n\t\t}\n\t}\n}"],"sourceRoot":"/source/"}