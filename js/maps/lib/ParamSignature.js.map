{"version":3,"sources":["lib/ParamSignature.ts"],"names":[],"mappings":";AAAA,gCAAyB,mBAAmB,CAAC,CAAA;AAE7C,IAAO,iBAAiB,GAAG,4BAAU,CAAC,iBAAiB,CAAC;AAGxD;;GAEG;AACH,IAAiB,KAAK,CAsFrB;AAtFD,WAAiB,KAAK,EAAC,CAAC;IACvB;;OAEG;IACH;QAAA;QAQA,CAAC;QANA;;WAEG;QACI,gBAAO,GAAd;YACC,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QACF,eAAC;IAAD,CARA,AAQC,IAAA;IARY,cAAQ,WAQpB,CAAA;IAED;;OAEG;IACH;QAAA;QAQA,CAAC;QANA;;WAEG;QACI,gBAAO,GAAd;YACC,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QACF,eAAC;IAAD,CARA,AAQC,IAAA;IARY,cAAQ,WAQpB,CAAA;IA+BD;;OAEG;IACH;QAKC;;WAEG;QACH,wBAAmB,QAA6B,EACtC,IAAY,EACZ,GAAW,EAClB,UAA+B;YAHf,aAAQ,GAAR,QAAQ,CAAqB;YACtC,SAAI,GAAJ,IAAI,CAAQ;YACZ,QAAG,GAAH,GAAG,CAAQ;YAPd,YAAO,GAAG,IAAI,CAAC;YASrB,EAAE,CAAC,CAAC,UAAU,YAAY,iBAAiB,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC9B,CAAC;YAAA,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,UAAU,KAAK,UAAU,CAAC,CAAC,CAAC;gBAC5C,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;gBACnD,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,WAAW,EAAE,CAAC;YAC3C,CAAC;QACF,CAAC;QAKD,sBAAW,oCAAQ;YAHnB;;eAEG;iBACH;gBACC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YACjC,CAAC;;;WAAA;QACF,qBAAC;IAAD,CA1BA,AA0BC,IAAA;IA1BY,oBAAc,iBA0B1B,CAAA;AACF,CAAC,EAtFgB,KAAK,GAAL,aAAK,KAAL,aAAK,QAsFrB","file":"lib/ParamSignature.js","sourcesContent":["import {Validation} from \"./ParamValidators\";\nimport IValidator = Validation.IValidator;\nimport AbstractValidator = Validation.AbstractValidator;\n\n\n/**\n * \n */\nexport namespace Param {\n\t/**\n\t * \n\t */\n\texport class Optional {\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tstatic valueOf(): boolean {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t *  \n\t */\n\texport class Required {\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tstatic valueOf(): boolean {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * \n\t */\n\texport interface IParamSignature {\n\t\trequired: (Required|Optional);\n\t\tname: string;\n\t\tkey: string;\n\t\tvalidation: IValidator;\n\t\tresolved: boolean;\n\t\tpayload: Object;\n\t}\n\n\t/**\n\t * \n\t */\n\texport type Param = {[k: string]: (string|number|boolean|Object)};\n\texport type Payload = {key: string, value: (string|number|boolean|Object)};\n\texport type PayloadVO = {[k: string]: Payload};\n\n\t/**\n\t * \n\t */\n\texport type ParamData = (string|boolean|number);\n\n\t/**\n\t * \n\t */\n\texport type TemplateData = Object|String;\n\n\t/**\n\t * \n\t */\n\texport class ParamSignature implements IParamSignature {\n\n\t\tpublic validation: IValidator;\n\t\tpublic payload = null;\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tconstructor(public required: (Required|Optional),\n\t\t\t\t\tpublic name: string,\n\t\t\t\t\tpublic key: string,\n\t\t\t\t\tvalidation: (IValidator|Object)) {\n\t\t\tif (validation instanceof AbstractValidator) {\n\t\t\t\tthis.validation = validation;\n\t\t\t}else if (typeof validation === \"function\") {\n\t\t\t\tlet proto = Object.create(validation[\"prototype\"]);\n\t\t\t\tthis.validation = new proto.constructor();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t */\n\t\tpublic get resolved(): boolean {\n\t\t\treturn this.validation.resolved;\n\t\t}\n\t}\n}"],"sourceRoot":"/source/"}